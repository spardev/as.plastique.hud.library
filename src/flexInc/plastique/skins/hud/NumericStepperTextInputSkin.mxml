<?xml version="1.0" encoding="utf-8"?>
<!--
FlexInc. 2011
http://www.loziosecchi.it/flex_inc
http://flashden.net/user/loziosecchi
http://twitter.com//loziosecchi
-->

<!--- The default skin class for the text input field of a Plastique NumericStepper component.  

@see spark.components.NumericStepper

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5"
			 focusIn="onFocusIn();" focusOut="onFocusOut();">
	
	<fx:Metadata>
		<![CDATA[ 
			/** 
			* @copy spark.skins.spark.ApplicationSkin#hostComponent
			*/
			[HostComponent("spark.components.TextInput")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				if (getStyle("borderVisible") == true)
				{
					border.visible = true;
					background.left = background.top = background.right = 1;
					background.bottom = 2;
					textDisplay.left = 5;
					textDisplay.top = textDisplay.right = textDisplay.bottom = 1;
				}
				else
				{
					border.visible = false;
					background.left = background.top = background.right = background.bottom = 0;
					textDisplay.left = 4;
					textDisplay.top = textDisplay.right = textDisplay.bottom = 0;
				}
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>

	<fx:Script>
		<![CDATA[
			/** 
			 * @private 
			 */     
			private static const focusExclusions:Array = ["textDisplay", "highlight"];
			
			/**
			 *  @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
			
			public function onFocusIn():void
			{
				highlight.visible = false;
			}
			
			public function onFocusOut():void
			{
				highlight.visible = true;
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled" stateGroups="disabledStates"/>
		<s:State name="normalWithPrompt"/>
		<s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
	</s:states>
	
	<!-- layer 1: highlight -->
	<!--- @private -->
	<s:Rect id="highlight" left="0" top="0" right="0" bottom="0" radiusX="2" >
		<s:fill>
			<s:SolidColor color="0x666666" alpha=".55" />
		</s:fill>
	</s:Rect>
	
	<!-- layer 2: border -->
	<!--- @private -->
	<s:Rect id="border" left="0" top="0" right="0" bottom="1" radiusX="2" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x1b1b1b" />
				<s:GradientEntry color="0x444444" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<!-- layer 3: fill -->
	<!--- @private -->
	<s:Rect id="background" left="1" top="1" right="1" bottom="2" radiusX="2" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry id="dotFill0" color="0x515151" />
				<s:GradientEntry id="dotFill1" color="0x414141" />
			</s:LinearGradient>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter angle="90" alpha=".15" color="0x000000" blurX="2" blurY="2" distance="1" strength="1" quality="3" inner="true" />
		</s:filters>
	</s:Rect>
	
	<!-- text -->
	<!--- @copy spark.components.supportClasses.SkinnableTextBase#textDisplay -->
	<s:RichEditableText id="textDisplay"
						lineBreak="explicit"
						verticalAlign="middle"
						multiline="false"
						left="5" right="1" top="1" bottom="1" 
						paddingLeft="3" paddingTop="6"
						paddingRight="6" paddingBottom="3"/>
	
</s:SparkSkin>

<?xml version="1.0" encoding="utf-8"?>
<!--
FlexInc. 2011
http://www.loziosecchi.it/flex_inc
http://flashden.net/user/loziosecchi
http://twitter.com//loziosecchi
-->

<!--- The default skin class for a Plastique NumericStepper component. The skin for the text input field on a NumericStepper
component is defined by the NumericStepperTextInputSkin class.  

       @see spark.components.NumericStepper
       @see spark.skins.spark.NumericStepperTextInputSkin
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
      xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minHeight="35" minWidth="40" 
      alpha.disabled="0.5">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.NumericStepper")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
	    <![CDATA[ 
	        
	        private var borderStylesChanged:Boolean;
	        
	        /**
	         *  @private
	         */
	        override protected function commitProperties():void
	        {
	            super.commitProperties();
	            
	            if (borderStylesChanged)
	            {
	                textDisplay.setStyle("borderVisible", getStyle("borderVisible"));
	                borderStylesChanged = false;
	            }
	        }
	        
	        /**
	         *  @private
	         */
	        override public function styleChanged(styleProp:String):void
	        {
	            var allStyles:Boolean = !styleProp || styleProp == "styleName";
	
	            super.styleChanged(styleProp);
	            
	            if (allStyles || styleProp.indexOf("border") == 0)
	            {
	                borderStylesChanged = true;
	                invalidateProperties();
	            }
	        }
	    ]]>
    </fx:Script>

	<fx:Script>
		<![CDATA[
			/** 
			 * @private 
			 */     
			private static const focusExclusions:Array = ["incrementButton", "decrementButton"];
			
			/**
			 *  @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
		]]>
	</fx:Script>
	
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>

	<!-- buttons container -->
	<!--- @private -->
	<s:VGroup top="0" right="0" bottom="2" gap="1" minWidth="30" verticalCenter="0">
	    <!--- The default class is NumericStepperIncrementButtonSkin.
	           @copy spark.components.Spinner#incrementButton
	           @see spark.skins.spark.NumericStepperIncrementButtonSkin -->
	    <s:Button id="incrementButton" width="100%"  height="50%" tabEnabled="false" 
	              skinClass="flexInc.plastique.skins.hud.NumericStepperIncrementButtonSkin" />
	              
	    <!--- The default class is NumericStepperDecrementButtonSkin.
	            @copy spark.components.Spinner#decrementButton
	            @see spark.skins.spark.NumericStepperDecrementButtonSkin -->
	    <s:Button id="decrementButton" width="100%"  height="50%" tabEnabled="false" 
	              skinClass="flexInc.plastique.skins.hud.NumericStepperDecrementButtonSkin" />
	</s:VGroup>
	
    <!--- The default class is NumericStepperTextInputSkin.
            @copy spark.components.NumericStepper#textDisplay
            @see spark.skins.spark.NumericStepperTextInputSkin -->
    <s:TextInput id="textDisplay" left="0" top="0" right="34" bottom="0"
        skinClass="flexInc.plastique.skins.hud.NumericStepperTextInputSkin" />
        
</s:SparkSkin>
